module.kubenet_dependencies.data.azurerm_subscription.primary[0]: Reading...
module.kubenet_dependencies.data.azurerm_subscription.primary[0]: Read complete after 1s [id=/subscriptions/1860ed42-abd6-4b36-a7f6-6f12fdf44471]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # azurerm_resource_group.terraform_infra will be created
  + resource "azurerm_resource_group" "terraform_infra" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "aks-prod-rg"
      + tags     = {
          + "Department" = "Engineering"
          + "Expires"    = "Never"
          + "Owner"      = "Organization_name"
        }
    }

  # module.aks_cluster.azurerm_kubernetes_cluster.aks_cluster will be created
  + resource "azurerm_kubernetes_cluster" "aks_cluster" {
      + dns_prefix              = "prod-aks"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + kube_admin_config       = (known after apply)
      + kube_admin_config_raw   = (sensitive value)
      + kube_config             = (known after apply)
      + kube_config_raw         = (sensitive value)
      + kubelet_identity        = (known after apply)
      + kubernetes_version      = "1.25"
      + location                = "eastus"
      + name                    = "prod-aks"
      + node_resource_group     = (known after apply)
      + private_cluster_enabled = false
      + private_dns_zone_id     = (known after apply)
      + private_fqdn            = (known after apply)
      + private_link_enabled    = (known after apply)
      + resource_group_name     = "aks-prod-rg"
      + sku_tier                = "Free"
      + tags                    = {
          + "Name" = "prod-aks"
        }

      + addon_profile {

          + http_application_routing {
              + enabled                            = false
              + http_application_routing_zone_name = (known after apply)
            }

          + kube_dashboard {
              + enabled = false
            }
        }

      + auto_scaler_profile {
          + balance_similar_node_groups      = true
          + max_graceful_termination_sec     = "600"
          + new_pod_scale_up_delay           = (known after apply)
          + scale_down_delay_after_add       = "10m"
          + scale_down_delay_after_delete    = "10s"
          + scale_down_delay_after_failure   = "3m"
          + scale_down_unneeded              = "10m"
          + scale_down_unready               = "20m"
          + scale_down_utilization_threshold = "0.5"
          + scan_interval                    = "10s"
          + skip_nodes_with_local_storage    = true
          + skip_nodes_with_system_pods      = true
        }

      + default_node_pool {
          + enable_auto_scaling   = false
          + enable_node_public_ip = true
          + max_pods              = (known after apply)
          + name                  = "akspool"
          + node_count            = 1
          + node_labels           = {
              + "Infra-Services" = "true"
            }
          + orchestrator_version  = "1.25"
          + os_disk_size_gb       = 20
          + os_disk_type          = "Managed"
          + tags                  = {
              + "agent_pool_name" = "akspool"
            }
          + type                  = "VirtualMachineScaleSets"
          + vm_size               = "Standard_B1ms"
        }

      + identity {
          + principal_id              = (known after apply)
          + tenant_id                 = (known after apply)
          + type                      = "UserAssigned"
          + user_assigned_identity_id = (known after apply)
        }

      + network_profile {
          + dns_service_ip     = (known after apply)
          + docker_bridge_cidr = (known after apply)
          + load_balancer_sku  = "standard"
          + network_mode       = (known after apply)
          + network_plugin     = "kubenet"
          + network_policy     = (known after apply)
          + outbound_type      = "loadBalancer"
          + pod_cidr           = (known after apply)
          + service_cidr       = (known after apply)

          + load_balancer_profile {
              + effective_outbound_ips    = (known after apply)
              + idle_timeout_in_minutes   = (known after apply)
              + managed_outbound_ip_count = (known after apply)
              + outbound_ip_address_ids   = (known after apply)
              + outbound_ip_prefix_ids    = (known after apply)
              + outbound_ports_allocated  = (known after apply)
            }
        }

      + role_based_access_control {
          + enabled = false
        }

      + windows_profile {
          + admin_password = (sensitive value)
          + admin_username = (known after apply)
        }
    }

  # module.kubenet_dependencies.azurerm_role_assignment.network_contributor[0] will be created
  + resource "azurerm_role_assignment" "network_contributor" {
      + id                               = (known after apply)
      + name                             = (known after apply)
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = (known after apply)
      + role_definition_name             = "Network Contributor"
      + scope                            = "/subscriptions/1860ed42-abd6-4b36-a7f6-6f12fdf44471"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.kubenet_dependencies.azurerm_user_assigned_identity.example[0] will be created
  + resource "azurerm_user_assigned_identity" "example" {
      + client_id           = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "aksidentity"
      + principal_id        = (known after apply)
      + resource_group_name = "aks-prod-rg"
    }

  # module.network.data.azurerm_resource_group.network will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "azurerm_resource_group" "network" {
      + id       = (known after apply)
      + location = (known after apply)
      + name     = "aks-prod-rg"
      + tags     = (known after apply)

      + timeouts {
          + read = (known after apply)
        }
    }

  # module.network.azurerm_subnet.subnet[0] will be created
  + resource "azurerm_subnet" "subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "20.10.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "subnet-1"
      + resource_group_name                            = "aks-prod-rg"
      + virtual_network_name                           = "aks-prod-network"
    }

  # module.network.azurerm_subnet.subnet[1] will be created
  + resource "azurerm_subnet" "subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "20.10.2.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "subnet-2"
      + resource_group_name                            = "aks-prod-rg"
      + virtual_network_name                           = "aks-prod-network"
    }

  # module.network.azurerm_subnet.subnet[2] will be created
  + resource "azurerm_subnet" "subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "20.10.3.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "subnet-3"
      + resource_group_name                            = "aks-prod-rg"
      + virtual_network_name                           = "aks-prod-network"
    }

  # module.network.azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space         = [
          + "20.10.0.0/16",
        ]
      + dns_servers           = []
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = (known after apply)
      + name                  = "aks-prod-network"
      + resource_group_name   = "aks-prod-rg"
      + subnet                = (known after apply)
      + tags                  = {
          + "Department" = "Engineering"
          + "Expires"    = "Never"
          + "Owner"      = "Organization_name"
        }
      + vm_protection_enabled = false
    }

  # module.security_groups_subnet_route_table_association.azurerm_network_security_group.network_sg[0] will be created
  + resource "azurerm_network_security_group" "network_sg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "subnet-1-network-sg"
      + resource_group_name = "aks-prod-rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "0.0.0.0/0"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "subnet-1-network-sg-rule-inbound"
              + priority                                   = 100
              + protocol                                   = "*"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "0.0.0.0/0"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Outbound"
              + name                                       = "subnet-1-network-sg-rule-outbound"
              + priority                                   = 102
              + protocol                                   = "*"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "Name" = "subnet-1-network-sg"
        }
    }

  # module.security_groups_subnet_route_table_association.azurerm_network_security_group.network_sg[1] will be created
  + resource "azurerm_network_security_group" "network_sg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "subnet-2-network-sg"
      + resource_group_name = "aks-prod-rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "0.0.0.0/0"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "subnet-2-network-sg-rule-inbound"
              + priority                                   = 100
              + protocol                                   = "*"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "0.0.0.0/0"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Outbound"
              + name                                       = "subnet-2-network-sg-rule-outbound"
              + priority                                   = 102
              + protocol                                   = "*"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "Name" = "subnet-2-network-sg"
        }
    }

  # module.security_groups_subnet_route_table_association.azurerm_network_security_group.network_sg[2] will be created
  + resource "azurerm_network_security_group" "network_sg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "subnet-3-network-sg"
      + resource_group_name = "aks-prod-rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "0.0.0.0/0"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "subnet-3-network-sg-rule-inbound"
              + priority                                   = 100
              + protocol                                   = "*"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "0.0.0.0/0"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Outbound"
              + name                                       = "subnet-3-network-sg-rule-outbound"
              + priority                                   = 102
              + protocol                                   = "*"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "Name" = "subnet-3-network-sg"
        }
    }

  # module.security_groups_subnet_route_table_association.azurerm_route_table.subnet_rt[0] will be created
  + resource "azurerm_route_table" "subnet_rt" {
      + disable_bgp_route_propagation = false
      + id                            = (known after apply)
      + location                      = "eastus"
      + name                          = "subnet-1-route-table"
      + resource_group_name           = "aks-prod-rg"
      + route                         = [
          + {
              + address_prefix         = "0.0.0.0/0"
              + name                   = "subnet-1-route"
              + next_hop_in_ip_address = null
              + next_hop_type          = "Internet"
            },
        ]
      + subnets                       = (known after apply)
      + tags                          = {
          + "Name" = "subnet-1-route-table"
        }
    }

  # module.security_groups_subnet_route_table_association.azurerm_route_table.subnet_rt[1] will be created
  + resource "azurerm_route_table" "subnet_rt" {
      + disable_bgp_route_propagation = false
      + id                            = (known after apply)
      + location                      = "eastus"
      + name                          = "subnet-2-route-table"
      + resource_group_name           = "aks-prod-rg"
      + route                         = [
          + {
              + address_prefix         = "0.0.0.0/0"
              + name                   = "subnet-2-route"
              + next_hop_in_ip_address = null
              + next_hop_type          = "Internet"
            },
        ]
      + subnets                       = (known after apply)
      + tags                          = {
          + "Name" = "subnet-2-route-table"
        }
    }

  # module.security_groups_subnet_route_table_association.azurerm_route_table.subnet_rt[2] will be created
  + resource "azurerm_route_table" "subnet_rt" {
      + disable_bgp_route_propagation = false
      + id                            = (known after apply)
      + location                      = "eastus"
      + name                          = "subnet-3-route-table"
      + resource_group_name           = "aks-prod-rg"
      + route                         = [
          + {
              + address_prefix         = "0.0.0.0/0"
              + name                   = "subnet-3-route"
              + next_hop_in_ip_address = null
              + next_hop_type          = "Internet"
            },
        ]
      + subnets                       = (known after apply)
      + tags                          = {
          + "Name" = "subnet-3-route-table"
        }
    }

  # module.security_groups_subnet_route_table_association.azurerm_subnet_network_security_group_association.subnet_network_sg_association[0] will be created
  + resource "azurerm_subnet_network_security_group_association" "subnet_network_sg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.security_groups_subnet_route_table_association.azurerm_subnet_network_security_group_association.subnet_network_sg_association[1] will be created
  + resource "azurerm_subnet_network_security_group_association" "subnet_network_sg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.security_groups_subnet_route_table_association.azurerm_subnet_network_security_group_association.subnet_network_sg_association[2] will be created
  + resource "azurerm_subnet_network_security_group_association" "subnet_network_sg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.security_groups_subnet_route_table_association.azurerm_subnet_route_table_association.subnet_rt_association[0] will be created
  + resource "azurerm_subnet_route_table_association" "subnet_rt_association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.security_groups_subnet_route_table_association.azurerm_subnet_route_table_association.subnet_rt_association[1] will be created
  + resource "azurerm_subnet_route_table_association" "subnet_rt_association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.security_groups_subnet_route_table_association.azurerm_subnet_route_table_association.subnet_rt_association[2] will be created
  + resource "azurerm_subnet_route_table_association" "subnet_rt_association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

Plan: 20 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cluster_name            = "prod-aks"
  + default_ng_rg_name      = (known after apply)
  + environment             = "prod"
  + name                    = "aks"
  + resource_group_location = "eastus"
  + resource_group_name     = "aks-prod-rg"

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
